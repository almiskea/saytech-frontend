{"ast":null,"code":"var _jsxFileName = \"/Users/almiskea/ipro/saytech-frontend/src/context/Auth0Provider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { Auth0Client } from '@auth0/auth0-spa-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth0Context = /*#__PURE__*/createContext();\nexport const useAuth0 = () => {\n  _s();\n  const context = useContext(Auth0Context);\n  if (!context) {\n    throw new Error('useAuth0 must be used within an Auth0Provider');\n  }\n  return context;\n};\n_s(useAuth0, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const Auth0Provider = ({\n  children\n}) => {\n  _s2();\n  const [auth0Client, setAuth0Client] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initAuth0 = async () => {\n      try {\n        const auth0 = new Auth0Client({\n          domain: 'dev-xgfoocqykomy345z.us.auth0.com',\n          clientId: 'B8ahCgArT8cZuYHp1f9g0DVdiuZdXrcz',\n          authorizationParams: {\n            redirect_uri: window.location.origin,\n            audience: 'https://dev-xgfoocqykomy345z.us.auth0.com/api/v2/',\n            scope: 'openid profile email read:users read:user_idp_tokens'\n          },\n          cacheLocation: 'localstorage',\n          // For SPA, use localStorage for token persistence\n          useRefreshTokens: true // Enable refresh tokens for better UX\n        });\n        setAuth0Client(auth0);\n\n        // Check if user is authenticated after redirect\n        if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\n          try {\n            await auth0.handleRedirectCallback();\n            // Clear the URL parameters after successful authentication\n            window.history.replaceState({}, document.title, window.location.pathname);\n\n            // After successful Auth0 callback, redirect to admin dashboard\n            // We'll use a slight delay to ensure the Auth0 state is fully updated\n            setTimeout(() => {\n              if (window.location.pathname === '/' || window.location.pathname === '/welcome') {\n                window.history.pushState({}, '', '/adminDashboard');\n                window.dispatchEvent(new PopStateEvent('popstate'));\n              }\n            }, 100);\n          } catch (error) {\n            console.error('Error handling redirect callback:', error);\n            setError(error.message);\n          }\n        }\n        const isAuthenticated = await auth0.isAuthenticated();\n        setIsAuthenticated(isAuthenticated);\n        if (isAuthenticated) {\n          const user = await auth0.getUser();\n          setUser(user);\n        }\n      } catch (error) {\n        console.error('Error initializing Auth0:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initAuth0();\n  }, []);\n  const loginWithRedirect = async (options = {}) => {\n    try {\n      await (auth0Client === null || auth0Client === void 0 ? void 0 : auth0Client.loginWithRedirect(options));\n    } catch (error) {\n      console.error('Error during login:', error);\n      setError(error.message);\n    }\n  };\n  const logout = (options = {}) => {\n    auth0Client === null || auth0Client === void 0 ? void 0 : auth0Client.logout({\n      logoutParams: {\n        returnTo: window.location.origin\n      },\n      ...options\n    });\n  };\n  const getAccessToken = async (options = {}) => {\n    try {\n      if (!auth0Client) throw new Error('Auth0 client not initialized');\n      const token = await auth0Client.getTokenSilently({\n        authorizationParams: {\n          audience: 'https://dev-xgfoocqykomy345z.us.auth0.com/api/v2/',\n          scope: 'openid profile email read:users read:user_idp_tokens'\n        },\n        ...options\n      });\n      return token;\n    } catch (error) {\n      console.error('Error getting access token:', error);\n\n      // If silent auth fails, redirect to login\n      if (error.error === 'login_required' || error.error === 'consent_required') {\n        await loginWithRedirect();\n        return null;\n      }\n      throw error;\n    }\n  };\n  const value = {\n    isLoading,\n    isAuthenticated,\n    user,\n    error,\n    loginWithRedirect,\n    logout,\n    getAccessToken\n  };\n  return /*#__PURE__*/_jsxDEV(Auth0Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s2(Auth0Provider, \"fD4JAa47e5rdysprpBGmZm+5EJ0=\");\n_c = Auth0Provider;\nvar _c;\n$RefreshReg$(_c, \"Auth0Provider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Auth0Client","jsxDEV","_jsxDEV","Auth0Context","useAuth0","_s","context","Error","Auth0Provider","children","_s2","auth0Client","setAuth0Client","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","user","setUser","error","setError","initAuth0","auth0","domain","clientId","authorizationParams","redirect_uri","window","location","origin","audience","scope","cacheLocation","useRefreshTokens","search","includes","handleRedirectCallback","history","replaceState","document","title","pathname","setTimeout","pushState","dispatchEvent","PopStateEvent","console","message","getUser","loginWithRedirect","options","logout","logoutParams","returnTo","getAccessToken","token","getTokenSilently","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/almiskea/ipro/saytech-frontend/src/context/Auth0Provider.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { Auth0Client } from '@auth0/auth0-spa-js';\n\nconst Auth0Context = createContext();\n\nexport const useAuth0 = () => {\n    const context = useContext(Auth0Context);\n    if (!context) {\n        throw new Error('useAuth0 must be used within an Auth0Provider');\n    }\n    return context;\n};\n\nexport const Auth0Provider = ({ children }) => {\n    const [auth0Client, setAuth0Client] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            try {\n                const auth0 = new Auth0Client({\n                    domain: 'dev-xgfoocqykomy345z.us.auth0.com',\n                    clientId: 'B8ahCgArT8cZuYHp1f9g0DVdiuZdXrcz',\n                    authorizationParams: {\n                        redirect_uri: window.location.origin,\n                        audience: 'https://dev-xgfoocqykomy345z.us.auth0.com/api/v2/',\n                        scope: 'openid profile email read:users read:user_idp_tokens'\n                    },\n                    cacheLocation: 'localstorage', // For SPA, use localStorage for token persistence\n                    useRefreshTokens: true // Enable refresh tokens for better UX\n                });\n\n                setAuth0Client(auth0);\n\n                // Check if user is authenticated after redirect\n                if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\n                    try {\n                        await auth0.handleRedirectCallback();\n                        // Clear the URL parameters after successful authentication\n                        window.history.replaceState({}, document.title, window.location.pathname);\n                        \n                        // After successful Auth0 callback, redirect to admin dashboard\n                        // We'll use a slight delay to ensure the Auth0 state is fully updated\n                        setTimeout(() => {\n                            if (window.location.pathname === '/' || window.location.pathname === '/welcome') {\n                                window.history.pushState({}, '', '/adminDashboard');\n                                window.dispatchEvent(new PopStateEvent('popstate'));\n                            }\n                        }, 100);\n                    } catch (error) {\n                        console.error('Error handling redirect callback:', error);\n                        setError(error.message);\n                    }\n                }\n\n                const isAuthenticated = await auth0.isAuthenticated();\n                setIsAuthenticated(isAuthenticated);\n\n                if (isAuthenticated) {\n                    const user = await auth0.getUser();\n                    setUser(user);\n                }\n            } catch (error) {\n                console.error('Error initializing Auth0:', error);\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        initAuth0();\n    }, []);\n\n    const loginWithRedirect = async (options = {}) => {\n        try {\n            await auth0Client?.loginWithRedirect(options);\n        } catch (error) {\n            console.error('Error during login:', error);\n            setError(error.message);\n        }\n    };\n\n    const logout = (options = {}) => {\n        auth0Client?.logout({\n            logoutParams: {\n                returnTo: window.location.origin\n            },\n            ...options\n        });\n    };\n\n    const getAccessToken = async (options = {}) => {\n        try {\n            if (!auth0Client) throw new Error('Auth0 client not initialized');\n            \n            const token = await auth0Client.getTokenSilently({\n                authorizationParams: {\n                    audience: 'https://dev-xgfoocqykomy345z.us.auth0.com/api/v2/',\n                    scope: 'openid profile email read:users read:user_idp_tokens'\n                },\n                ...options\n            });\n            return token;\n        } catch (error) {\n            console.error('Error getting access token:', error);\n            \n            // If silent auth fails, redirect to login\n            if (error.error === 'login_required' || error.error === 'consent_required') {\n                await loginWithRedirect();\n                return null;\n            }\n            \n            throw error;\n        }\n    };\n\n    const value = {\n        isLoading,\n        isAuthenticated,\n        user,\n        error,\n        loginWithRedirect,\n        logout,\n        getAccessToken\n    };\n\n    return (\n        <Auth0Context.Provider value={value}>\n            {children}\n        </Auth0Context.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}